from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class CursorPagination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, limit=None, next_cursor=None, has_next=None):  # noqa: E501
        """CursorPagination - a model defined in OpenAPI

        :param limit: The limit of this CursorPagination.  # noqa: E501
        :type limit: int
        :param next_cursor: The next_cursor of this CursorPagination.  # noqa: E501
        :type next_cursor: str
        :param has_next: The has_next of this CursorPagination.  # noqa: E501
        :type has_next: bool
        """
        self.openapi_types = {
            'limit': int,
            'next_cursor': str,
            'has_next': bool
        }

        self.attribute_map = {
            'limit': 'limit',
            'next_cursor': 'next_cursor',
            'has_next': 'has_next'
        }

        self._limit = limit
        self._next_cursor = next_cursor
        self._has_next = has_next

    @classmethod
    def from_dict(cls, dikt) -> 'CursorPagination':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CursorPagination of this CursorPagination.  # noqa: E501
        :rtype: CursorPagination
        """
        return util.deserialize_model(dikt, cls)

    @property
    def limit(self) -> int:
        """Gets the limit of this CursorPagination.


        :return: The limit of this CursorPagination.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit: int):
        """Sets the limit of this CursorPagination.


        :param limit: The limit of this CursorPagination.
        :type limit: int
        """

        self._limit = limit

    @property
    def next_cursor(self) -> str:
        """Gets the next_cursor of this CursorPagination.


        :return: The next_cursor of this CursorPagination.
        :rtype: str
        """
        return self._next_cursor

    @next_cursor.setter
    def next_cursor(self, next_cursor: str):
        """Sets the next_cursor of this CursorPagination.


        :param next_cursor: The next_cursor of this CursorPagination.
        :type next_cursor: str
        """

        self._next_cursor = next_cursor

    @property
    def has_next(self) -> bool:
        """Gets the has_next of this CursorPagination.


        :return: The has_next of this CursorPagination.
        :rtype: bool
        """
        return self._has_next

    @has_next.setter
    def has_next(self, has_next: bool):
        """Sets the has_next of this CursorPagination.


        :param has_next: The has_next of this CursorPagination.
        :type has_next: bool
        """

        self._has_next = has_next
